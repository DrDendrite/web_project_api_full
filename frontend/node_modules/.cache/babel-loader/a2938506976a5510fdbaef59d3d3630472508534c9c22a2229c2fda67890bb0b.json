{"ast":null,"code":"const BASE_URL = \"api.dendriteprojectaround.ignorelist.com\";\nexport const register = async (password, email) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Error al registrarse: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw new Error(`Error en la solicitud de registro: ${err.message}`);\n  }\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  }).then(credentials => {\n    if (credentials.token) {\n      localStorage.setItem(\"token\", credentials.token);\n      return credentials;\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["BASE_URL","register","password","email","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","err","message","authorize","then","credentials","token","localStorage","setItem","catch","console","log","checkToken","Authorization","res"],"sources":["C:/Users/DrDendrite/dev/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["const BASE_URL = \"api.dendriteprojectaround.ignorelist.com\";\n\nexport const register = async (password, email) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password, email }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error al registrarse: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    throw new Error(`Error en la solicitud de registro: ${err.message}`);\n  }\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((credentials) => {\n      if (credentials.token) {\n        localStorage.setItem(\"token\", credentials.token);\n        return credentials;\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,0CAA0C;AAE3D,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,SAAS,EAAE;MACjDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAM,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBR,QAAQ,CAACS,MAAM,EAAE,CAAC;IAC7D;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,MAAM,IAAIJ,KAAK,CAAC,sCAAsCI,GAAG,CAACC,OAAO,EAAE,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAChB,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOE,KAAK,CAAC,GAAGL,QAAQ,SAAS,EAAE;IACjCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CACCgB,IAAI,CAAEf,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACW,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDI,IAAI,CAAEC,WAAW,IAAK;IACrB,IAAIA,WAAW,CAACC,KAAK,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,WAAW,CAACC,KAAK,CAAC;MAChD,OAAOD,WAAW;IACpB;EACF,CAAC,CAAC,CACDI,KAAK,CAAER,GAAG,IAAK;IACdS,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMW,UAAU,GAAIN,KAAK,IAAK;EACnC,OAAOhB,KAAK,CAAC,GAAGL,QAAQ,WAAW,EAAE;IACnCM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCqB,aAAa,EAAE,UAAUP,KAAK;IAChC;EACF,CAAC,CAAC,CACCF,IAAI,CAAEU,GAAG,IAAK;IACb,OAAOA,GAAG,CAACd,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDS,KAAK,CAAER,GAAG,IAAK;IACdS,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}